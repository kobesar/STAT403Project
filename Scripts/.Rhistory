best_pred <- knn_pred
}
}
table(Actual = test$Y, Predicted = best_pred)
j <- sample(150, 150, replace = T)
samp <- train[j,]
min_k <- 0
test_err_k <- c()
best_pred <- 0
for(i in 3:30) {
knn_pred <- knn(samp[,-8], test[,-8], samp$Y, i)
test_err_k <- c(test_err, mean(knn_pred != test$Y))
if(test_err[i-2] == min(test_err_k)) {
min_k <- i
best_pred <- knn_pred
}
}
table(Actual = test$Y, Predicted = best_pred)
test_err_k
j <- sample(150, 150, replace = T)
samp <- train[j,]
min_k <- 0
test_err_k <- c()
best_pred <- 0
for(i in 3:30) {
knn_pred <- knn(samp[,-8], test[,-8], samp$Y, i)
test_err_k <- c(test_err_k, mean(knn_pred != test$Y))
if(test_err[i-2] == min(test_err_k)) {
min_k <- i
best_pred <- knn_pred
}
}
table(Actual = test$Y, Predicted = best_pred)
test_err_k
j <- sample(150, 150, replace = T)
samp <- train[j,]
min_k <- 0
test_err_k <- c()
best_pred <- 0
for(i in 3:30) {
knn_pred <- knn(samp[,-8], test[,-8], samp$Y, i)
test_err_k[i-2] <- mean(knn_pred != test$Y)
if(test_err[i-2] == min(test_err_k)) {
min_k <- i
best_pred <- knn_pred
}
}
table(Actual = test$Y, Predicted = best_pred)
min(test_err_k)
test_err_k
j <- sample(150, 150, replace = T)
samp <- train[j,]
min_k <- 0
test_err_k <- c()
best_pred <- 0
for(i in 3:30) {
knn_pred <- knn(samp[,-8], test[,-8], samp$Y, i)
test_err_k[i-2] <- mean(knn_pred != test$Y)
if(test_err[i-2] < min(test_err_k)) {
min_k <- i
best_pred <- knn_pred
}
}
table(Actual = test$Y, Predicted = best_pred)
j <- sample(150, 150, replace = T)
samp <- train[j,]
k0 <- 0
test_err_k <- c()
best_pred <- 0
min_err <- 100000
for(i in 3:30) {
knn_pred <- knn(samp[,-8], test[,-8], samp$Y, i)
test_err_temp <- mean(knn_pred != test$Y)
if(test_err_temp < min_err) {
k0 <- i
best_pred <- knn_pred
min_err <- test_err_temp
}
}
table(Actual = test$Y, Predicted = best_pred)
cluster_data <- data.frame(X1 = c(3,6,0,2,4,5), X2 = C(1,2,4,1,8,0), label = as.factor(c(1,2,2,1,1,2)))
cluster_data <- data.frame(X1 = c(3,6,0,2,4,5), X2 = C(1,2,4,1,8,0), label = factor(c(1,2,2,1,1,2)))
factor
?factor
cluster_data <- data.frame(X1 = c(3,6,0,2,4,5), X2 = C(1,2,4,1,8,0), label = factor(c(1,2,2,1,1,2), levels = c(1,2)))
cluster_data <- data.frame(X1 = c(3,6,0,2,4,5), X2 = C(1,2,4,1,8,0), label = c(1,2,2,1,1,2))
cluster_data <- data.frame(X1 = c(3,6,0,2,4,5), X2 = c(1,2,4,1,8,0), label = c(1,2,2,1,1,2))
plot(cluster_data$X1, cluster_data$X2, col = label, pch = 19)
cluster_data <- data.frame(X1 = c(3,6,0,2,4,5), X2 = c(1,2,4,1,8,0), label = c(1,2,2,1,1,2))
plot(cluster_data$X1, cluster_data$X2, col = cluster$label, pch = 19)
cluster_data <- data.frame(X1 = c(3,6,0,2,4,5), X2 = c(1,2,4,1,8,0), label = c(1,2,2,1,1,2))
plot(cluster_data$X1, cluster_data$X2, col = cluster_data$label, pch = 19)
plot(cluster_data$X1, cluster_data$X2, col = cluster_data$label, pch = 19,
xlab = "X1", ylab = "X2")
cluster_data <- data.frame(X1 = c(3,6,0,2,4,5), X2 = c(1,2,4,1,8,0), label = c(1,2,2,1,1,2))
plot(cluster_data$X1, cluster_data$X2, col = cluster_data$label, pch = 19,
xlab = "X1", ylab = "X2")
legend("topright", c("1", "2"), col = c("black", "red"), pch = 19)
View(cluster_data)
knitr::opts_chunk$set(echo = TRUE)
data(rock)
kde1 <- ksmooth(rock$peri, rock$area, kernel = "normal", bandwidth = 500)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(rock$peri, kde1)
kde1 <- ksmooth(rock$peri, rock$area, kernel = "normal", bandwidth = 500)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde1)
kde1 <- ksmooth(rock$peri, rock$area, kernel = "normal", bandwidth = 500)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde1, lwd = 2)
kde2 <- ksmooth(rock$peri, rock$area, kernel = "normal", bandwidth = 250)
kde3 <- ksmooth(rock$peri, rock$area, kernel = "normal", bandwidth = 1000)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde2, lwd = 2, col = "red")
lines(kde1, lwd = 2)
lines(kde2, lwd = 2, col = "blue")
legend("bottomright", c("250", "500", "1000"), col = c("red", "black", "blue"),
lwd = 2)
kde2 <- ksmooth(rock$peri, rock$area, kernel = "normal", bandwidth = 250)
kde3 <- ksmooth(rock$peri, rock$area, kernel = "normal", bandwidth = 1000)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde2, lwd = 2, col = "red")
lines(kde1, lwd = 2)
lines(kde3, lwd = 2, col = "blue")
legend("bottomright", c("250", "500", "1000"), col = c("red", "black", "blue"),
lwd = 2)
install.packages("tidyverse")
install.packages("glmnet")
library(tidyverse)
library(glmnet)
cols <- str_split("age
sex
educ18
income20
racism20
life
region
sizeplac
pres
votemeth
abortion
facemask
lgbt
climatec", "\n")[[1]]
data <- read.csv("../Data/31119913_National2020.csv")
setwd("C:/Users/kaije/OneDrive - UW/UW Classes/STAT 403/STAT403Project/Scripts")
data <- read.csv("../Data/31119913_National2020.csv")
data_subset <- data[, cols]
data_subset[data_subset == " "] <- "Omit"
data_subset$age = relevel(factor(data_subset$age), ref = "18-29")
data_subset$sex = relevel(factor(data_subset$sex), ref = "Female")
data_subset$educ18 = relevel(factor(data_subset$educ18), ref = "Never attended college")
data_subset$income20 = relevel(factor(data_subset$income20), ref = "Omit")
data_subset$racism20 = relevel(factor(data_subset$racism20), ref = "Omit")
data_subset$life = relevel(factor(data_subset$life), ref = "Omit")
data_subset$region = relevel(factor(data_subset$region), ref = "South")
data_subset$sizeplac = relevel(factor(data_subset$sizeplac), ref = "Suburbs")
data_subset$votemeth = relevel(factor(data_subset$votemeth), ref = "Election day")
data_subset$abortion = relevel(factor(data_subset$abortion), ref = "Omit")
data_subset$facemask = relevel(factor(data_subset$facemask), ref = "Omit")
data_subset$lgbt = relevel(factor(data_subset$lgbt), ref = "Omit")
data_subset$climatec = relevel(factor(data_subset$climatec), ref = "Omit")
X <- model.matrix(pres ~ ., data_subset)[,-1]
Y <- data_subset$pres == "Joe Biden"
data_full <- data.frame(cbind(Y, X))
mod <- glm(Y ~ ., family = "binomial", data = data_full)
summary(mod)
mod_step <- step(mod, direction = "backward", k = log(nrow(data_full)))
cols_final <- str_split("age
sex
educ18
income20
racism20
sizeplac
pres
votemeth
abortion
climatec", "\n")[[1]]
X_final <- model.matrix(pres ~ ., data_subset[,cols_final])[,-1]
Y_final <- data_subset$pres == "Joe Biden"
data_full_final <- data.frame(cbind(Y_final, X_final))
sample_i <- sample(nrow(data_full_final), nrow(data_full_final)*0.8, replace = FALSE)
data_train <- data_full_final[sample_i,]
data_test <- data_full_final[-sample_i,]
mod_final <- glm(Y_final ~ ., family = "binomial", data = data_train)
summary(mod_final)
mod_final <- glm(Y_final ~ ., family = "binomial", data = data_full_final)
summary(mod_final)
summary(mod_final)
View(data)
View(data_full_final)
pred_data <- data_full_final[0,]
pred_data <- data_full_final[0,]
pred_data[,2] <- c(0,0,1)
pred_data <- data_full_final[1:3,]
pred_data[,2] <- c(0,0,1)
pred_data[,3] <- c(1,0,0)
pred_data[,4] <- c(0,0,0)
pred_data[,5] <- c(0,0,0)
pred_data[,6] <- c(0,1,0)
pred_data[,7] <- c(0,0,1)
pred_data[,8] <- c(0,0,0)
pred_data[,9] <- c(0,0,1)
pred_data[,10] <- c(0,0,0)
pred_data[,11] <- c(0,1,0)
pred_data[,12] <- c(0,0,0)
pred_data[,13] <- c(1,0,0)
pred_data[,14] <- c(0,0,0)
pred_data[,15] <- c(0,1,0)
pred_data[,16] <- c(0,0,0)
pred_data[,17] <- c(0,0,1)
pred_data[,18] <- c(1,0,0)
pred_data[,19] <- c(0,0,0)
pred_data[,20] <- c(0,1,1)
pred_data[,21] <- c(0,0,0)
pred_data[,22] <- c(0,0,0)
pred_data[,23] <- c(0,0,1)
pred_data[,24] <- c(0,1,0)
pred_data[,25] <- c(0,0,0)
pred_data[,26] <- c(1,0,0)
pred_data[,27] <- c(0,1,0)
pred_data[,28] <- c(0,0,1)
pred_data[,29] <- c(0,0,0)
pred_data[,30] <- c(1,0,0)
pred_data[,31] <- c(0,0,0)
pred_data[,32] <- c(0,1,0)
pred_data[,33] <- c(1,0,0)
pred_data[,34] <- c(0,0,0)
View(pred_data)
predict(mod_final, pred_data, type = "response")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
data(rock)
lm1 <- lm(area ~ peri, data = rock)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(rock$peri, fitted(lm1))
kde1 <- ksmooth(rock$peri, rock$area, kernel = "normal", bandwidth = 500)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde1, lwd = 2)
kde2 <- ksmooth(rock$peri, rock$area, kernel = "normal", bandwidth = 250)
kde3 <- ksmooth(rock$peri, rock$area, kernel = "normal", bandwidth = 1000)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde2, lwd = 2, col = "red")
lines(kde1, lwd = 2)
lines(kde3, lwd = 2, col = "blue")
legend("bottomright", c("250", "500", "1000"), col = c("red", "black", "blue"),
lwd = 2)
View(kde1)
n <- nrow(rock)
n <- nrow(rock)
reg_boot <- matrix(nrow = 10000, ncol = length(kde1$y))
for(i in 1:10000) {
j <- sample(n,n, replace = T)
samp <- rock[j,]
reg_boot[i,] <- ksmooth(samp$peri, samp$area, kernel = "normal",
bandwidth = 500)$y
}
boot_sd <- sapply(1:length(kde1$x), function(x){
sd(reg_boot[,x], na.rm=T)
})
View(reg_boot)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde1, lwd = 2)
lines(kde1 + qnorm(0.975)*boot_sd, col = "blue", lty = 2)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde1, lwd = 2)
lines(kde$x, kde1$y + qnorm(0.975)*boot_sd, col = "blue", lty = 2)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde1, lwd = 2)
lines(kde1$x, kde1$y + qnorm(0.975)*boot_sd, col = "blue", lty = 2)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde1, lwd = 2)
lines(kde1$x, kde1$y + qnorm(0.975)*boot_sd, col = "blue", lty = 2, lwd = 2)
lines(kde1$x, kde1$y - qnorm(0.975)*boot_sd, col = "blue", lty = 2, lwd = 2)
n <- nrow(rock)
reg_boot <- matrix(nrow = 10000, ncol = length(kde1$y))
for(i in 1:10000) {
j <- sample(n,n, replace = T)
samp <- rock[j,]
reg_boot[i,] <- ksmooth(samp$peri, samp$area, kernel = "normal",
bandwidth = 500)$y
}
boot_sd <- sapply(1:length(kde1$x), function(x){
sd(reg_boot[,x], na.rm=T)
})
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(kde1, lwd = 2)
lines(kde1$x, kde1$y + qnorm(0.975)*boot_sd, col = "darkblue", lty = 2, lwd = 2)
lines(kde1$x, kde1$y - qnorm(0.975)*boot_sd, col = "darkblue", lty = 2, lwd = 2)
View(rock)
b1 <- rock %>%
select(peri, area) %>%
filter(peri < 1000)
View(b1)
b1 <- rock %>%
select(peri, area) %>%
filter(peri < 1000) %>%
summarize(num = mean(area)) %>%
pull()
b1 <- rock %>%
select(peri, area) %>%
filter(peri < 1000) %>%
summarize(mean(area)) %>%
pull()
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(1:1000, b1)
?stepfun()
1:5*1000
regressogram <- stepfun(1:5*1000, c(b1, b2, b3, b4, b5))
b1 <- rock %>%
select(peri, area) %>%
filter(peri <= 1000) %>%
summarize(mean(area)) %>%
pull()
b2 <- rock %>%
select(peri, area) %>%
filter(peri > 1000) %>%
filter(peri <= 2000) %>%
summarize(mean(area)) %>%
pull()
b3 <- rock %>%
select(peri, area) %>%
filter(peri > 2000) %>%
filter(peri <= 3000) %>%
summarize(mean(area)) %>%
pull()
b4 <- rock %>%
select(peri, area) %>%
filter(peri > 3000) %>%
filter(peri <= 4000) %>%
summarize(mean(area)) %>%
pull()
b5 <- rock %>%
select(peri, area) %>%
filter(peri > 4000) %>%
filter(peri <= 5000) %>%
summarize(mean(area)) %>%
pull()
regressogram <- stepfun(1:5*1000, c(b1, b2, b3, b4, b5))
b1 <- rock %>%
select(peri, area) %>%
filter(peri <= 1000) %>%
summarize(mean(area)) %>%
pull()
b2 <- rock %>%
select(peri, area) %>%
filter(peri > 1000) %>%
filter(peri <= 2000) %>%
summarize(mean(area)) %>%
pull()
b3 <- rock %>%
select(peri, area) %>%
filter(peri > 2000) %>%
filter(peri <= 3000) %>%
summarize(mean(area)) %>%
pull()
b4 <- rock %>%
select(peri, area) %>%
filter(peri > 3000) %>%
filter(peri <= 4000) %>%
summarize(mean(area)) %>%
pull()
b5 <- rock %>%
select(peri, area) %>%
filter(peri > 4000) %>%
filter(peri <= 5000) %>%
summarize(mean(area)) %>%
pull()
regressogram <- stepfun(1:4*1000, c(b1, b2, b3, b4, b5))
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(0:5000, regressogram(0:5000))
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(0:5000, regressogram(0:5000), lwd = 2)
plot(rock$peri, rock$area, pch = 19, xlab = "peri", ylab = "area")
lines(0:5000, regressogram(0:5000), lwd = 2, lty = 2)
h_seq <- seq(100, 1000, 50)
sample(n,n) %% 3
n <- nrow(rock)
h_seq <- seq(100, 1000, 50)
cv_err <- rep(0, length(h_seq))
folds <- sample(n,n) %% 3
for(i in h_seq) {
for(j in 1:3) {
index <- which(folds == (j-1))
train <- rock[-index,]
test <- rock[index,]
reg <- ksmooth(train$peri, train$area, kernel = "normal",
bandwidth = h_seq[i], x.points = test$peri)
cv_err[i] <- cv_err[i]+mean((train$area[order(train$peri)]-reg$y)^2,na.rm=T)
}
cv_err[i] <- cv_err[i] / 3
}
plot(h_seq, cv_err, type = "l")
cv_err
n <- nrow(rock)
h_seq <- seq(100, 1000, 50)
cv_err <- rep(0, length(h_seq))
folds <- sample(n,n) %% 3
for(i in h_seq) {
cv_err_temp <- 0
for(j in 1:3) {
index <- which(folds == (j-1))
train <- rock[-index,]
test <- rock[index,]
reg <- ksmooth(train$peri, train$area, kernel = "normal",
bandwidth = h_seq[i], x.points = test$peri)
cv_err_temp <- cv_err_temp
+mean((train$area[order(train$peri)]-reg$y)^2,na.rm=T)
}
cv_err[i] <- cv_err_temp / 3
}
plot(h_seq, cv_err, type = "l")
View(reg)
View(test)
test$peri
ksmooth(train$peri, train$area, kernel = "normal",
bandwidth = h_seq[i], x.points = test$peri)
ksmooth(train$peri, train$area, kernel = "normal",
bandwidth = 500, x.points = test$peri)
n <- nrow(rock)
h_seq <- seq(100, 1000, 50)
cv_err <- rep(0, length(h_seq))
folds <- sample(n,n) %% 3
for(i in h_seq) {
cv_err_temp <- 0
h <- h_seq[i]
for(j in 1:3) {
index <- which(folds == (j-1))
train <- rock[-index,]
test <- rock[index,]
reg <- ksmooth(train$peri, train$area, kernel = "normal",
bandwidth = h, x.points = test$peri)
cv_err_temp <- cv_err_temp
+mean((train$area[order(train$peri)]-reg$y)^2,na.rm=T)
}
cv_err[i] <- cv_err_temp / 3
}
plot(h_seq, cv_err, type = "l")
n <- nrow(rock)
h_seq <- seq(100, 1000, 50)
cv_err <- rep(0, length(h_seq))
folds <- sample(n,n) %% 3
for(i in 1:length(h_seq)) {
cv_err_temp <- 0
for(j in 1:3) {
index <- which(folds == (j-1))
train <- rock[-index,]
test <- rock[index,]
reg <- ksmooth(train$peri, train$area, kernel = "normal",
bandwidth = h_seq[i], x.points = test$peri)
cv_err_temp <- cv_err_temp
+mean((train$area[order(train$peri)]-reg$y)^2,na.rm=T)
}
cv_err[i] <- cv_err_temp / 3
}
plot(h_seq, cv_err, type = "l")
n <- nrow(rock)
h_seq <- seq(100, 1000, 50)
cv_err <- rep(0, length(h_seq))
folds <- sample(n,n) %% 3
for(i in 1:length(h_seq)) {
cv_err_temp <- 0
for(j in 1:3) {
index <- which(folds == (j-1))
train <- rock[-index,]
test <- rock[index,]
reg <- ksmooth(train$peri, train$area, kernel = "normal",
bandwidth = h_seq[i], x.points = test$peri)
cv_err_temp <- cv_err_temp
+mean((train$area[order(train$peri)]-reg$y)^2)
}
cv_err[i] <- cv_err_temp / 3
}
plot(h_seq, cv_err, type = "l")
n <- nrow(rock)
h_seq <- seq(100, 1000, 50)
cv_err <- rep(0, length(h_seq))
folds <- sample(n,n) %% 3
for(i in 1:length(h_seq)) {
cv_err_temp <- 0
for(j in 1:3) {
index <- which(folds == (j-1))
train <- rock[-index,]
test <- rock[index,]
reg <- ksmooth(train$peri, train$area, kernel = "normal",
bandwidth = h_seq[i], x.points = test$peri)
cv_err_temp <- cv_err_temp
+mean((test$area[order(test$peri)]-reg$y)^2)
}
cv_err[i] <- cv_err_temp / 3
}
plot(h_seq, cv_err, type = "l")
n <- nrow(rock)
h_seq <- seq(100, 1000, 50)
cv_err <- rep(0, length(h_seq))
folds <- sample(n,n) %% 3
for(i in 1:length(h_seq)) {
cv_err_temp <- 0
for(j in 1:3) {
index <- which(folds == (j-1))
train <- rock[-index,]
test <- rock[index,]
reg <- ksmooth(train$peri, train$area, kernel = "normal",
bandwidth = h_seq[i], x.points = test$peri)
cv_err_temp <- cv_err_temp+mean((test$area[order(test$peri)]-reg$y)^2)
}
cv_err[i] <- cv_err_temp / 3
}
plot(h_seq, cv_err, type = "l")
